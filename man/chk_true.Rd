% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chk-standalone.R, R/chk-values.R
\name{chk_true}
\alias{chk_true}
\alias{chk}
\alias{chk_false}
\alias{chk_flag}
\alias{chk_lgl}
\alias{chk_number}
\alias{chk_whole_number}
\alias{chk_string}
\alias{chk_named}
\alias{chk_null}
\alias{chk_inherits}
\alias{chk_is}
\alias{chk_identical}
\alias{chk_equal}
\alias{chk_equivalent}
\alias{chk_grepl}
\alias{chk_no_missing}
\alias{chk_function}
\alias{chk_unused}
\alias{chk_used}
\alias{chk_dir}
\alias{chk_file}
\alias{chk_match}
\alias{chk_values}
\title{Check Object}
\usage{
chk_true(x, err = TRUE)

chk_false(x, err = TRUE)

chk_flag(x, err = TRUE)

chk_lgl(x, err = TRUE)

chk_number(x, err = TRUE)

chk_whole_number(x, err = TRUE)

chk_string(x, err = TRUE)

chk_named(x, err = TRUE)

chk_null(x, err = TRUE)

chk_inherits(x, class, err = TRUE)

chk_is(x, class, err = TRUE)

chk_identical(x, y, err = TRUE)

chk_equal(x, y, tolerance = sqrt(.Machine$double.eps), err = TRUE)

chk_equivalent(x, y, tolerance = sqrt(.Machine$double.eps), err = TRUE)

chk_grepl(x, pattern = ".+", err = TRUE)

chk_no_missing(x, err = TRUE)

chk_function(x, err = TRUE)

chk_unused(..., err = TRUE)

chk_used(..., err = TRUE)

chk_dir(x, err = TRUE)

chk_file(x, err = TRUE)

chk_match(x, match = c(1, Inf), err = TRUE)

chk_values(x, values = c(1, Inf), err = TRUE)
}
\arguments{
\item{x}{The object to check.}

\item{err}{A flag specifying whether to generate an error
message if the check fails.}

\item{class}{A string specifying the class(es).}

\item{y}{An object to check against.}

\item{tolerance}{A non-negative numeric scalar.}

\item{pattern}{A string of a regular expression.}

\item{...}{Additional arguments.}

\item{match}{A vector of the permitted value(s).}

\item{values}{A vector of the permitted value(s). If
two non-missing values then it is considered to be a value range.}
}
\value{
A flag or an error if the check fails and err = TRUE.
}
\description{
Check Object
}
\details{
Checks if TRUE using:

\code{\link{isTRUE}(x)}
}
\section{Functions}{
\itemize{
\item \code{chk_false}: Check False

Checks if FALSE using:

\code{\link{isFALSE}(x)}

\item \code{chk_flag}: Check Flag

Checks if non-missing logical scalar using:

\code{\link{is.logical}(x) && \link{length}(x) == 1L && !\link{anyNA}(x)}

\item \code{chk_lgl}: Check Lgl

Checks if logical scalar using:

\code{\link{is.logical}(x) && \link{length}(x) == 1L && !\link{anyNA}(x)}

\item \code{chk_number}: Check Number

Checks if non-mising numeric scalar using:

\code{is.numeric(x) && length(x) == 1L && !\link{anyNA}(x)}

\item \code{chk_whole_number}: Check Whole Number
 
Checks if non-mising integer scalar or double equivalent using:

\code{is.numeric(x) && length(x) == 1L && !\link{anyNA}(x) && x == as.integer(x)}

\item \code{chk_string}: Check String

\code{\link{is.character}(x) && \link{length}(x) == 1L && !\link{anyNA}(x)}

\item \code{chk_named}: Check Named

\code{!\link{is.null}(\link{names}(x))}

\item \code{chk_null}: Check NULL

\code{\link{is.null}(x)}

\item \code{chk_inherits}: Check Inherits from Class

Class should be a scalar
\code{\link{inherits}(x, class)}

\item \code{chk_is}: Check Is Class

\code{\link{identical}(\link{class}(x), class)}

\item \code{chk_identical}: Check Identical

\code{\link{identical}(x, y)}

\item \code{chk_equal}: Check Equal

\code{\link{isTRUE}(\link{all.equal}(x, y, tolerance))}

\item \code{chk_equivalent}: Check Equivalent

\code{\link{isTRUE}(\link{all.equal}(x, y, tolerance, check.attributes = FALSE))}

\item \code{chk_grepl}: Check Matches Regular Expression

\code{all(\link{grepl}(pattern, x))}

\item \code{chk_no_missing}: Check No Missing Values

\code{!\link{anyNA}(x)}

\item \code{chk_function}: Check Function

\code{\link{is.function}(x)}

\item \code{chk_unused}: Check ... Unused

\code{!\link{length}(\link{list}(...))}

\item \code{chk_used}: Check ... Used

\code{\link{length}(\link{list}(...))}

\item \code{chk_dir}: Check Directory Exists

\code{\link{dir.exists}(x)}

\item \code{chk_file}: Check File Exists

\code{\link{file.exists}(x)}

\item \code{chk_match}: Check Match

\code{all(\link{match}(x, match, nomatch = 0) > 0)}

\item \code{chk_values}: Check Values

\code{all(\link{match}(x, match, nomatch = 0) > 0)} 
unless two non-missing values (in which case considered a value range).
}}

\examples{
# chk_true
chk_true(1, err = FALSE)
chk_true(NA, err = FALSE)
chk_true(TRUE)
chk_true(c(TRUE, FALSE), err = FALSE)





}
