% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chk-equal.R
\name{chk_equal}
\alias{chk_equal}
\alias{vld_equal}
\alias{chk_identical}
\alias{vld_identical}
\alias{chk_equivalent}
\alias{vld_equivalent}
\title{Check/Validate Equal, Identical or Equivalent}
\usage{
chk_equal(x, y, tolerance = sqrt(.Machine$double.eps), x_name = NULL)

vld_equal(x, y, tolerance = sqrt(.Machine$double.eps))

chk_identical(x, y, x_name = NULL)

vld_identical(x, y)

chk_equivalent(x, y, tolerance = sqrt(.Machine$double.eps),
  x_name = NULL)

vld_equivalent(x, y, tolerance = sqrt(.Machine$double.eps))
}
\arguments{
\item{x}{The object to check.}

\item{y}{An object to check against.}

\item{tolerance}{A non-negative numeric scalar.}

\item{x_name}{A string of the name of object x or NULL.}
}
\value{
The \code{chk_} functions throw an informative error if the test fails.
The \code{vld_} functions return a flag indicating whether the test was met.
}
\description{
Checks/validates if two objects are equal, identical or equivalent.
}
\section{Functions}{
\itemize{
\item \code{chk_equal}: Check Equal

Checks if is equal (identical within tolerance) to y using \code{vld_equal()}.

\item \code{vld_equal}: Validate Equal

Validates is equal (identical within tolerance) to y using

\code{isTRUE(\link{all.equal}(x, y, tolerance))}

\item \code{chk_identical}: Check Identical

Checks if is identical to y using \code{vld_identical()}.

\item \code{vld_identical}: Validate Identical

Validates is identical to y using

\code{\link{identical}(x, y)}.

\item \code{chk_equivalent}: Check Equivalent

Checks if is equivalent (equal ignoring attributes) to y using 
\code{vld_equivalent()}.

\item \code{vld_equivalent}: Validate Equivalent

Validates is equivalent (equal ignoring attributes) to y using

\code{\link{isTRUE}(\link{all.equal}(x, y, tolerance, check.attributes = FALSE))}
}}

\examples{

# chk_equal
chk_equal(1, 1.00000001)
try(chk_equal(1, 1.0000001))
chk_equal(1, 1L)
chk_equal(c(x = 1), c(x = 1L))
try(chk_equal(c(x = 1), c(y = 1L)))

# vld_equal
vld_equal(1, 1.00000001)
vld_equal(1, 1.0000001)
vld_equal(1, 1L)
vld_equal(c(x = 1), c(x = 1L))
vld_equal(c(x = 1), c(y = 1L))

# chk_identical
chk_identical(1, 1)
try(chk_identical(1, 1L))
chk_identical(c(1,1), c(1,1))
try(chk_identical(1, c(1,1)))

# vld_identical
vld_identical(1, 1L)
vld_identical(1, 1)
vld_identical(1, c(1,1))
vld_identical(c(1,1), c(1,1))

# chk_equivalent
chk_equivalent(1, 1.00000001)
try(chk_equivalent(1, 1.0000001))

# vld_equivalent
vld_equivalent(1, 1.00000001)
vld_equivalent(1, 1L)
vld_equivalent(c(x = 1), c(y = 1L))
vld_equivalent(c(x = 1), c(x = 1L))
vld_equivalent(1, 1.0000001)
}
