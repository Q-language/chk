% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chk.R
\name{chk_flag}
\alias{chk_flag}
\alias{chk}
\alias{chk_lgl}
\alias{chk_number}
\alias{chk_string}
\alias{chk_named}
\alias{chk_null}
\alias{chk_function}
\alias{chk_is}
\alias{chk_no_missing}
\alias{chk_unused}
\alias{chk_used}
\alias{chk_length}
\title{Check Object}
\usage{
chk_flag(x, err = TRUE)

chk_lgl(x, err = TRUE)

chk_number(x, err = TRUE)

chk_string(x, err = TRUE)

chk_named(x, err = TRUE)

chk_null(x, err = TRUE)

chk_function(x, err = TRUE)

chk_is(x, class, err = TRUE)

chk_no_missing(x, err = TRUE)

chk_unused(..., err = TRUE)

chk_used(..., err = TRUE)

chk_length(x, length = c(1L, 2147483647), err = TRUE)
}
\arguments{
\item{x}{The object to check.}

\item{err}{A flag specifying whether to generate an error
message if the check fails.}

\item{class}{A string specifying the class.}

\item{...}{Additional arguments.}

\item{length}{An integer vector of the permitted lengths. If
two values then it is considered to be a length range.}
}
\value{
A flag or an error if the check fails and err == TRUE.
}
\description{
A flag is a non-missing logical scalar.
}
\section{Functions}{
\itemize{
\item \code{chk_lgl}: Check logical Scalar

\item \code{chk_number}: Check number (non-mising numeric scalar)

\item \code{chk_string}: Check string (non-mising character scalar)

\item \code{chk_named}: Check named

\item \code{chk_null}: Check NULL

\item \code{chk_function}: Check function

\item \code{chk_is}: Check inherits from class

\item \code{chk_no_missing}: Check no missing values

\item \code{chk_unused}: Check unused

\item \code{chk_used}: Check used

\item \code{chk_length}: Check length
}}

\examples{
# chk_flag
chk_flag(1, err = FALSE)
chk_flag(NA, err = FALSE)
chk_flag(TRUE)
chk_flag(c(TRUE, FALSE), err = FALSE)

# chk_lgl
chk_lgl(1, err = FALSE)
chk_lgl(NA)
chk_lgl(TRUE)
chk_lgl(c(TRUE, FALSE), err = FALSE)

# chk_number
chk_number(TRUE, err = FALSE)
chk_number(1L)
chk_number(1.1)
chk_number(-3)

# chk_string
chk_string(1, err = FALSE)
chk_string(NA_character_, err  = FALSE)
chk_string("")
chk_string(c("a", "b"), err = FALSE)

# chk_named
chk_named(1, err = FALSE)
chk_named(list(), err = FALSE)
chk_named(c(x = 1))
chk_named(list(x = 1))
chk_named(c(x = 1)[-1])
}
